---
import Layout from '../../layouts/Layout.astro';
import { format } from 'date-fns';
import api from '../../lib/clients';

const { slug } = Astro.params;

if (!slug) {
  return Astro.redirect('/404');
}
const response = await api.posts[':slug'].$get({
  param: {
    slug: slug
  }
});
const data = await response.json();
if (!response.ok || !('post' in data)) {
  // console.error('Error fetching post:', data);
  return Astro.redirect('/404');
}
const post = data.post;

if (!post) {
  return Astro.redirect('/404');
}
---

<Layout title={post.title}>
  <article class="prose lg:prose-xl mx-auto">
    <h1 class="text-3xl font-bold mb-4">{post.title}</h1>
    <time class="text-sm text-gray-500 mb-8 block">
      {post.date ? format(new Date(post.date), 'MMMM d, yyyy') : 'No date available'}
    </time>
    <div class="text-gray-700 leading-relaxed">
      {post.excerpt}
    </div>
    <div class="mt-6 text-gray-800">
      {post.content && <div set:html={post.content} />}
    </div>
    <div class="mt-8 flex justify-between items-center">
      <a href="/" class="text-blue-600 hover:text-blue-800">‚Üê Back to all posts</a>
      <button
        id="deletePostButton"
        class="bg-red-500 hover:bg-red-600 text-white py-2 px-4 rounded"
        data-post-slug={slug}
      >
        Delete Post
      </button>
    </div>
  </article>

  <!-- Custom Confirmation Modal -->
  <div id="confirmationModal" class="fixed inset-0 backdrop-blur-lg bg-opacity-50 shadow-2xl hidden flex items-center justify-center z-50">
    <div class="bg-white p-6 rounded-lg shadow-xl max-w-md w-full">
      <h3 class="text-lg font-semibold mb-4">Confirm Deletion</h3>
      <p class="text-gray-600 mb-6">Are you sure you want to delete this post? This action cannot be undone.</p>
      <div class="flex justify-end space-x-2">
        <button id="cancelDelete" class="px-4 py-2 border border-gray-300 rounded text-gray-700 hover:bg-gray-100">
          Cancel
        </button>
        <button id="confirmDelete" class="px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600">
          Delete
        </button>
      </div>
    </div>
  </div>

  <!-- Custom Notification Toast -->
  <div id="notificationToast" class="fixed bottom-4 right-4 px-6 py-3 rounded shadow-lg hidden transition-opacity duration-300">
    <div class="flex items-center">
      <span id="notificationMessage" class="text-sm font-medium"></span>
    </div>
  </div>

  <script>
    // DOM elements
    const deleteButton = document.getElementById('deletePostButton');
    const confirmationModal = document.getElementById('confirmationModal');
    const cancelDelete = document.getElementById('cancelDelete');
    const confirmDelete = document.getElementById('confirmDelete');
    const notificationToast = document.getElementById('notificationToast');
    const notificationMessage = document.getElementById('notificationMessage');
    
    // Show confirmation modal
    deleteButton?.addEventListener('click', () => {
      confirmationModal?.classList.remove('hidden');
    });
    
    // Hide confirmation modal
    cancelDelete?.addEventListener('click', () => {
      confirmationModal?.classList.add('hidden');
    });
    
    // Show notification
    function showNotification(message: string, isError = false) {
      if (notificationToast && notificationMessage) {
        notificationMessage.textContent = message;
        
        if (isError) {
          notificationToast.classList.add('bg-red-100', 'text-red-800');
          notificationToast.classList.remove('bg-green-100', 'text-green-800');
        } else {
          notificationToast.classList.add('bg-green-100', 'text-green-800');
          notificationToast.classList.remove('bg-red-100', 'text-red-800');
        }
        
        notificationToast.classList.remove('hidden');
        
        setTimeout(() => {
          notificationToast.classList.add('hidden');
        }, 3000);
      }
    }
    
    // Handle delete confirmation
    confirmDelete?.addEventListener('click', async () => {
      const slug = deleteButton?.getAttribute('data-post-slug');
      
      try {
        const response = await fetch(`/api/posts/${slug}`, {
          method: 'DELETE',
        });
        
        confirmationModal?.classList.add('hidden');
        
        if (response.ok) {
          showNotification('Post deleted successfully!');
          setTimeout(() => {
            window.location.href = '/';
          }, 1000);
        } else {
          showNotification('Failed to delete the post.', true);
        }
      } catch (error) {
        console.error('Error deleting post:', error);
        confirmationModal?.classList.add('hidden');
        showNotification('An error occurred while deleting the post.', true);
      }
    });
  </script>
</Layout>